//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Barcline.OpenEhr.Model
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.openehr.org/v1", IsNullable=true)]
    [Table("ARCHETYPE_SLOT", Schema = "openehr")]
    public partial class ARCHETYPE_SLOT : C_OBJECT
    {
        
        private ASSERTIONCollection includesField;
        
        private ASSERTIONCollection excludesField;
        
        [System.Xml.Serialization.XmlElementAttribute("includes")]
        public virtual ASSERTIONCollection includes
        {
            get
            {
                if (includesField == null)
                {
                    this.includesField = new ASSERTIONCollection();
                }
                return includesField;
            }
            set
            {
                this.includesField = value;
                if (value != null)
                {
                }
                this.RaisePropertyChanged("includes");
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("excludes")]
        public virtual ASSERTIONCollection excludes
        {
            get
            {
                if (excludesField == null)
                {
                    this.excludesField = new ASSERTIONCollection();
                }
                return excludesField;
            }
            set
            {
                this.excludesField = value;
                if (value != null)
                {
                }
                this.RaisePropertyChanged("excludes");
            }
        }
    }
}
