//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Barcline.OpenEhr.Model
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    
    
    /// <remarks/>
    /// <summary>
    /// Required properties: system_id
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.openehr.org/v1", IsNullable=true)]
    [Table("FEEDER_AUDIT_DETAILS", Schema = "openehr")]
    public partial class FEEDER_AUDIT_DETAILS : System.ComponentModel.INotifyPropertyChanged
    {
        
        private string system_idField;
        
        private PARTY_IDENTIFIED locationField;
        
        private PARTY_IDENTIFIED providerField;
        
        private PARTY_PROXY subjectField;
        
        private DV_DATE_TIME timeField;
        
        private string version_idField;
        
        [Required()]
        [MaxLength(4000)]
        public virtual string system_id
        {
            get
            {
                return this.system_idField;
            }
            set
            {
                this.system_idField = value;
                this.RaisePropertyChanged("system_id");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual PARTY_IDENTIFIED location
        {
            get
            {
                return locationField;
            }
            set
            {
                this.locationField = value;
                this.RaisePropertyChanged("location");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual PARTY_IDENTIFIED provider
        {
            get
            {
                return providerField;
            }
            set
            {
                this.providerField = value;
                this.RaisePropertyChanged("provider");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual PARTY_PROXY subject
        {
            get
            {
                return subjectField;
            }
            set
            {
                this.subjectField = value;
                this.RaisePropertyChanged("subject");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual DV_DATE_TIME time
        {
            get
            {
                return timeField;
            }
            set
            {
                this.timeField = value;
                this.RaisePropertyChanged("time");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        [MaxLength(4000)]
        public virtual string version_id
        {
            get
            {
                return this.version_idField;
            }
            set
            {
                this.version_idField = value;
                this.RaisePropertyChanged("version_id");
            }
        }

        [field: NonSerialized]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
