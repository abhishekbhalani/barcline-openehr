//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Barcline.OpenEhr.Model
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    
    
    /// <remarks/>
    /// <summary>
    /// Required properties: concept, definition, language, template_id
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    [System.Xml.Serialization.XmlRootAttribute("template", Namespace="http://schemas.openehr.org/v1", IsNullable=false)]
    [Table("OPERATIONAL_TEMPLATE", Schema = "openehr")]
    public partial class OPERATIONAL_TEMPLATE : OpenEhrUuidBasedObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private CODE_PHRASE languageField;
        
        private bool is_controlledField;
        
        private bool is_controlledFieldSpecified;
        
        private RESOURCE_DESCRIPTION descriptionField;
        
        private REVISION_HISTORY_ITEMCollection revision_historyField;
        
        private HIER_OBJECT_ID uidField;
        
        private TEMPLATE_ID template_idField;
        
        private string conceptField;
        
        private C_ARCHETYPE_ROOT definitionField;
        
        [Required()]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual CODE_PHRASE language
        {
            get
            {
                return languageField;
            }
            set
            {
                this.languageField = value;
                this.RaisePropertyChanged("language");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        public virtual bool is_controlled
        {
            get
            {
                return this.is_controlledField;
            }
            set
            {
                this.is_controlledField = value;
                this.RaisePropertyChanged("is_controlled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual bool is_controlledSpecified
        {
            get
            {
                return this.is_controlledFieldSpecified;
            }
            set
            {
                this.is_controlledFieldSpecified = value;
                this.RaisePropertyChanged("is_controlledSpecified");
            }
        }
        
        [Barcline.Core.MinOccurs("0")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual RESOURCE_DESCRIPTION description
        {
            get
            {
                return descriptionField;
            }
            set
            {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        [System.Xml.Serialization.XmlArrayItemAttribute("items", IsNullable=false)]
        [Barcline.Core.MinOccurs("0")]
        public virtual REVISION_HISTORY_ITEMCollection revision_history
        {
            get
            {
                if (revision_historyField == null)
                {
                    this.revision_historyField = new REVISION_HISTORY_ITEMCollection();
                }
                return revision_historyField;
            }
            set
            {
                this.revision_historyField = value;
                if (value != null)
                {
                }
                this.RaisePropertyChanged("revision_history");
            }
        }

        [MaxLength(OpenEhrConstants.ID_STR)]
        [Index("C_OPERATIONAL_TEMPLATE_UID_UK", IsUnique=true)]
        public String uid_value { get; set; }
        
        [Barcline.Core.MinOccurs("0")]
        [ForeignKey("uid_value")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual HIER_OBJECT_ID uid
        {
            get
            {
                return uidField;
            }
            set
            {
                this.uidField = value;
                this.RaisePropertyChanged("uid");
            }
        }
        
        [Required()]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual TEMPLATE_ID template_id
        {
            get
            {
                return template_idField;
            }
            set
            {
                this.template_idField = value;
                this.RaisePropertyChanged("template_id");
            }
        }
        
        [Required()]
        [MaxLength(4000)]
        public virtual string concept
        {
            get
            {
                return this.conceptField;
            }
            set
            {
                this.conceptField = value;
                this.RaisePropertyChanged("concept");
            }
        }
        
        [Required()]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        public virtual C_ARCHETYPE_ROOT definition
        {
            get
            {
                return definitionField;
            }
            set
            {
                this.definitionField = value;
                this.RaisePropertyChanged("definition");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
