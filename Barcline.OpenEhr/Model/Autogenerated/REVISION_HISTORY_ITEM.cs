//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Barcline.OpenEhr.Model
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    
    
    /// <remarks/>
    /// <summary>
    /// Required properties: audits, version_id
    /// </summary>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.openehr.org/v1", IsNullable=true)]
    [Table("REVISION_HISTORY_ITEM", Schema = "openehr")]
    public partial class REVISION_HISTORY_ITEM : System.ComponentModel.INotifyPropertyChanged
    {
        
        private OBJECT_VERSION_ID version_idField;
        
        private AUDIT_DETAILSCollection auditsField;

        [Key]
        [Required]
        public string version_id_value { get; set; }

        [Required]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]
        [ForeignKey("version_id_value")]
        public virtual OBJECT_VERSION_ID version_id
        {
            get
            {
                return version_idField;
            }
            set
            {
                this.version_idField = value;
                this.RaisePropertyChanged("version_id");
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("audits")]
        [Barcline.Core.MaxOccurs("unbounded")]
        [Required()]
        public virtual AUDIT_DETAILSCollection audits
        {
            get
            {
                if (auditsField == null)
                {
                    this.auditsField = new AUDIT_DETAILSCollection();
                }
                return auditsField;
            }
            set
            {
                this.auditsField = value;
                if (value != null)
                {
                }
                this.RaisePropertyChanged("audits");
            }
        }

        [field: NonSerialized]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
